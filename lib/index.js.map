{"version":3,"sources":["lib/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { Config, DefaultConfig, Microplum } from \"./model\";\n\nimport * as bluebird from \"bluebird\";\nimport * as _ from \"lodash\";\nimport * as seneca from \"seneca\";\nimport * as senecaAmqpTransport from \"seneca-amqp-transport\";\n\nconst DEFAULT_OPTIONS: DefaultConfig = {\n    version: \"v1\",\n    environment: process.env.NODE_ENV || \"production\",\n    pin: [],\n    clientPin: \"version:*,role:*,cmd:*,environment:\"+(process.env.NODE_ENV || \"production\"),\n    seneca: {\n        log: { level: \"info+\" },\n        transport: {},\n        timeout: 5000\n    },\n};\n\nexport class SenecaPlum implements Microplum {\n\n    public seneca: seneca.Instance;\n    public actPromise: Function;\n\n    constructor(public options: Config) {\n        this.options = _.merge(DEFAULT_OPTIONS, options);\n        this.options.seneca.transport.msgprefix = this.options.seneca.transport.msgprefix || this.options.app;\n        this.initSeneca();\n    }\n\n    public listen(): void {\n        this.seneca.listen({\n            type: \"amqp\",\n            pin: this.options.pin,\n            url: this.options.amqpUrl\n        });\n    }\n\n    /**\n     * Set-up seneca connection\n     */\n    public client(): void {\n        this.seneca.client({\n            type: 'amqp',\n            pin: this.options.clientPin,\n            url: this.options.amqpUrl\n        });\n    }\n\n    public act(pin: any, respond: seneca.ActCallback): void {\n        this.addBasicProperties(pin);\n        this.addAdditionalProperties(pin);\n        this.seneca.act(pin, respond);\n    }\n\n    public use(component: Function, pin?: any): void {\n        component.bind(this)(this.options);\n        if (pin) {\n            this.addPin(pin);\n        }\n    }\n\n    public add(pin: any, cb: seneca.AddCallback): void {\n        this.addBasicProperties(pin);\n        this.addAdditionalProperties(pin);\n        this.seneca.add(pin, cb);\n        console.log(`[Microplum] Registered service for PIN: ${JSON.stringify(pin)}`);\n    }\n\n    protected addPin(pin: any): void {\n        this.addBasicProperties(pin);\n        let realPin:string = Object.keys(pin)\n            .map(key => `${key}:${pin[key]}`)\n            .join(\",\");\n\n        console.log(`[Microplum] Register listen for PIN: \\\"${realPin}\\\"`);\n        this.options.pin.push(realPin);\n    }\n\n    protected addBasicProperties(pin: any): any {\n        pin.version = pin.version || this.options.version;\n        pin.environment = pin.environment || this.options.environment;\n        return pin;\n    }\n\n    protected addAdditionalProperties(pin: any): any {\n        if (this.options.environment === \"dev\" && this.options.developer) {\n            pin.developer = this.options.developer\n        }\n        return pin;\n    }\n\n    /**\n     * Set-up seneca with all the middleware libraries.\n     */\n    protected initSeneca(): void {\n        this.seneca = seneca(this.options.seneca);\n        this.seneca.use(senecaAmqpTransport);\n        // Promisify the .act() method; to learn more about this technique see:\n        // http://bluebirdjs.com/docs/features.html#promisification-on-steroids\n        this.actPromise = bluebird.promisify(this.act, { context: this });\n    }\n\n}\n"]}