{"version":3,"sources":["lib/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import { Config, DefaultConfig, Entity, Microplum } from \"./model\";\n\nimport * as _ from \"lodash\";\nimport * as seneca from \"seneca\";\nimport * as senecaAmqpTransport from \"seneca-amqp-transport\";\nimport { NotAllowedPlumError, transformSenecaError } from \"./error\";\n\n/**\n * Seneca interface for updating with non specified seneca methods\n */\ninterface Seneca extends seneca.Instance {\n    /**\n     * Close connection to the queue. Use it on closing the app to be sure that no zombie connections have stayed.\n     */\n    close(): void;\n}\n\n/**\n * get current environment value\n */\nconst currentEnvironment = () => process.env.NODE_ENV || \"production\";\n\n/**\n * Default options value for the microplum\n * @type {DefaultConfig}\n */\nconst DEFAULT_OPTIONS: DefaultConfig = {\n    version: 1,\n    subversion: 0,\n    revision: 0,\n    environment: currentEnvironment(),\n    pin: [],\n    clientPin: `provider:*,version:*,subversion:*,revision:*,role:*,environment:${currentEnvironment()}`,\n    seneca: {\n        log: \"standard\",\n        transport: {},\n        timeout: 5000\n    },\n};\n\nexport class SenecaPlum implements Microplum {\n\n    public seneca: Seneca;\n\n    constructor(public options: Config) {\n        this.options = _.merge(DEFAULT_OPTIONS, options);\n        this.options.seneca.transport.msgprefix = this.options.seneca.transport.msgprefix || this.options.app;\n        this.initSeneca();\n    }\n\n    public close(): void {\n        this.seneca.close();\n        console.log(`[Microplum] Closing the connections.`);\n    }\n\n    public listen(): void {\n        this.seneca.listen({\n            type: \"amqp\",\n            pin: this.options.pin,\n            url: this.options.amqpUrl\n        });\n    }\n\n    /**\n     * Set-up seneca connection\n     */\n    public client(): void {\n        this.seneca.client({\n            type: 'amqp',\n            pin: this.options.clientPin,\n            url: this.options.amqpUrl\n        });\n        console.log(`[Microplum] Registered client for PIN: ${this.options.clientPin}`);\n    }\n\n    public act(pin: any, respond: seneca.ActCallback): void {\n        this.addBasicProperties(pin);\n        this.addAdditionalProperties(pin);\n        this.seneca.act(pin, respond);\n    }\n\n    public actPromise(pin: any, user?: any): Promise<any> {\n        console.log(`[Microplum] CALL => ${JSON.stringify(pin)}`);\n        if (!pin.role || typeof pin.role !== \"string\" || !pin.cmd || typeof pin.cmd !== \"string\") {\n            throw new NotAllowedPlumError(`[act] there is no service with no string 'role' or 'cmd' parameter: ` +\n                `<= ${JSON.stringify(pin)}`);\n        } else if (!this.options.roles.includes(pin.role)) {\n            throw new NotAllowedPlumError(`[act] the role is not in the list ` +\n                `${JSON.stringify(this.options.roles)} <= ${JSON.stringify(pin)}`);\n        }\n        // add user information\n        if (user) {\n            pin.user = user;\n        }\n        if (user && (user.id || user.sub)) {\n            pin.userId = (user.id) ? user.id : `${user.iss || \"\"}${user.sub || \"\"}`;\n        }\n        if (user && user.name) {\n            pin.userName = user.name;\n        }\n        // call the service\n        return new Promise((resolve, reject) => {\n            this.act(pin, (err: any | null, data: any): void => {\n                if (err) {\n                    console.error(`[Microplum] <= ${JSON.stringify(pin)}`, err);\n                    return reject(transformSenecaError(err));\n                } else {\n                    console.log(`[Microplum] ANSWER [status:${(data) ? data.status : ''}] <= ${JSON.stringify(pin)}`);\n                    if (data && typeof data.status === \"boolean\") {\n                        if (data.status) {\n                            return resolve(data.data);\n                        } else if (data.error) {\n                            return reject(data.error);\n                        } else {\n                            return reject(data);\n                        }\n                    } else {\n                        console.log(\"[Microplum] ANSWER unknown type: resolving data\");\n                        return resolve(data);\n                    }\n                }\n            });\n        });\n    }\n\n    public useService(service: Entity, pin?: any): void {\n        service.setAct(this.actPromise.bind(this));\n        this.use(service.plugin(), pin || service.publicPin());\n    }\n\n    public use(component: Function, pin?: any): void {\n        component.bind(this)(this.options);\n        if (pin) {\n            this.addPin(pin);\n        }\n    }\n\n    public add(pin: any, cb: (args: any) => Promise<any | void>): void {\n        pin = this.addBasicProperties(pin);\n        pin = this.addAdditionalProperties(pin);\n        this.seneca.add(pin, this.encloseCallback(cb));\n        console.log(`[Microplum] Registered service for PIN: ${JSON.stringify(pin)}`);\n    }\n\n    private escapeDoc(doc: any): any {\n        if (Array.isArray(doc)) {\n            return doc.map(docElement => this.escapeDoc(docElement));\n        } else if (doc && doc.toObject) {\n            return doc.toObject();\n        } else if (doc) {\n            return doc;\n        } else {\n            return null;\n        }\n    }\n\n    protected encloseCallback(cb: (args: any) => Promise<any | void>): seneca.AddCallback {\n        return <seneca.AddCallback>(async (pin: any, done: seneca.ActCallback): Promise<void> => {\n            try {\n                done(null, { status: true, data: this.escapeDoc(await cb(pin)) });\n                //cb(pin, (err: any, result: any): void => done(null, this.escapeDoc(result)));\n            } catch (err) {\n                done(null, { status: false, error: transformSenecaError(err) });\n                throw err;\n            }\n        });\n    }\n\n    protected addPin(pin: any): void {\n        pin = this.addBasicProperties(pin);\n        pin.provider = \"*\";\n        let realPin: string = Object.keys(pin)\n            .filter(key => pin[key] !== undefined)\n            .map(key => `${key}:${pin[key]}`)\n            .join(\",\");\n\n        console.log(`[Microplum] Register listen for PIN: \\\"${realPin}\\\"`);\n        this.options.pin.push(realPin);\n    }\n\n    protected addBasicProperties(pin: any): any {\n        pin.provider = pin.provider || this.options.provider || \"*\";\n        pin.version = pin.version || this.options.version;\n        pin.subversion = pin.subversion || this.options.subversion;\n        pin.revision = pin.revision || this.options.revision;\n        pin.environment = pin.environment || this.options.environment;\n        return pin;\n    }\n\n    protected addAdditionalProperties(pin: any): any {\n        if (this.options.debugUserId) {\n            pin.userId = this.options.debugUserId;\n        }\n        return pin;\n    }\n\n    /**\n     * Set-up seneca with all the middleware libraries.\n     */\n    protected initSeneca(): void {\n        this.seneca = <Seneca>seneca(this.options.seneca);\n        this.seneca.use(senecaAmqpTransport);\n    }\n\n}\n"]}