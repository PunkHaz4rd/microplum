{"version":3,"sources":["lib/entity.ts"],"names":[],"mappings":"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","file":"entity.js","sourcesContent":["import { Entity, HasAct, RestFacade, SeedFacade, PlumFacade, invalidActFun } from \"./model\";\r\nimport { NotAllowedPlumError, ServerPlumError } from \"./error\";\r\n\r\n\r\nexport abstract class ServiceEntity<F extends PlumFacade> implements Entity, HasAct {\r\n\r\n    public act: (args: { [key: string]: any }) => Promise<any>;\r\n    protected emptyFacade: F;\r\n\r\n    constructor(public name: string,\r\n                public FacadeClass?: new (act?: (args: any) => Promise<any>, args?: { [key: string]: any }) => F,\r\n                public servicePin?: any) {\r\n        this.act = invalidActFun;\r\n        this.emptyFacade = (this.FacadeClass) ? new this.FacadeClass() : <F>new PlumFacade();\r\n    }\r\n\r\n    public setAct(act: (args: { [key: string]: any }) => Promise<any>) {\r\n        this.act = act;\r\n    }\r\n\r\n    public getAct(user?: any): (args: { [key: string]: any }) => Promise<any> {\r\n        return (args) => {\r\n            if (user) {\r\n                args.user = args.user || user;\r\n            }\r\n            return this.act(args);\r\n        };\r\n    }\r\n\r\n    public createFacade(args: { [key: string]: any } = {}): F {\r\n        return new this.FacadeClass(this.act, args);\r\n    }\r\n\r\n    public plugin(): Function {\r\n        let addServices = this.addServices.bind(this);\r\n        let addDefaultService = this.addDefaultService.bind(this);\r\n        return function (options) {\r\n            addServices(this, options);\r\n            addDefaultService(this, options);\r\n        }\r\n    }\r\n\r\n    public publicPin(): any {\r\n        return { role: this.name };\r\n    }\r\n\r\n    protected abstract addServices(seneca: any, options: any): void;\r\n\r\n    protected addDefaultService(seneca: any, options: any): void {\r\n        let pin: any = this.pin(this.name, \"*\");\r\n        seneca.add(pin, async args => {\r\n            console.log(`WARNING: [Microplum] Method is not registered for PIN:${JSON.stringify(pin)}`);\r\n            if (args.nonErrorDefault) {\r\n                return Promise.resolve();\r\n            } else {\r\n                throw new NotAllowedPlumError(\"Service not found.\", { service: pin, args: args });\r\n            }\r\n        });\r\n    }\r\n\r\n    protected pin(role: string, cmd: string, additionalArgs: {} = {}): any {\r\n        let pin = Object.assign({}, this.servicePin || {}, additionalArgs);\r\n        pin.role = role;\r\n        pin.cmd = cmd;\r\n        return pin;\r\n    }\r\n\r\n}\r\n\r\nexport class SeedEntity extends ServiceEntity<SeedFacade> {\r\n    protected addServices(seneca: any, options: any): void {\r\n        if (this.emptyFacade.reset) {\r\n            seneca.add(this.pin(this.name, \"reset\"),\r\n                async args => this.createFacade(args).reset(args.seed));\r\n        }\r\n        if (this.emptyFacade.seed) {\r\n            seneca.add(this.pin(this.name, \"seed\"),\r\n                async args => this.createFacade(args).seed());\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * CRUD for the entity\r\n */\r\nexport class RestEntity extends ServiceEntity<RestFacade<any>> {\r\n    protected addServices(seneca: any, options: any): void {\r\n        this.addGetServices(seneca);\r\n        this.addStatisticalServices(seneca);\r\n        this.addModifyServices(seneca);\r\n    }\r\n\r\n    protected addGetServices(seneca: any): void {\r\n        if (this.emptyFacade.find) {\r\n            seneca.add(this.pin(this.name, \"find\", { conditions: \"*\" }),\r\n                async args => this.createFacade(args).find(args.conditions));\r\n        }\r\n        if (this.emptyFacade.findOne) {\r\n            seneca.add(this.pin(this.name, \"findOne\", { conditions: \"*\" }),\r\n                async args => this.createFacade(args).findOne(args.conditions));\r\n        }\r\n        if (this.emptyFacade.findById) {\r\n            seneca.add(this.pin(this.name, \"find\", { id: \"*\" }),\r\n                async args => this.createFacade(args).findById(args.id));\r\n        }\r\n    }\r\n\r\n    protected addStatisticalServices(seneca: any): void {\r\n        if (this.emptyFacade.count) {\r\n            seneca.add(this.pin(this.name, \"count\", { conditions: \"*\" }),\r\n                async args => this.createFacade(args).count(args.conditions));\r\n        }\r\n    }\r\n\r\n    protected addModifyServices(seneca: any): void {\r\n        if (this.emptyFacade.create) {\r\n            seneca.add(this.pin(this.name, \"create\", { input: \"*\" }),\r\n                async args => this.createFacade(args).create(args.input));\r\n        }\r\n        if (this.emptyFacade.update) {\r\n            seneca.add(this.pin(this.name, \"updateAll\", { conditions: \"*\", input: \"*\" }),\r\n                async args => this.createFacade(args).update(args.conditions, args.input));\r\n        }\r\n        if (this.emptyFacade.updateOne) {\r\n            seneca.add(this.pin(this.name, \"update\", { conditions: \"*\", input: \"*\" }),\r\n                async args => this.createFacade(args).updateOne(args.conditions, args.input));\r\n        }\r\n        if (this.emptyFacade.updateById) {\r\n            seneca.add(this.pin(this.name, \"update\", { id: \"*\", input: \"*\" }),\r\n                async args => this.createFacade(args).updateById(args.id, args.input));\r\n        }\r\n        if (this.emptyFacade.remove) {\r\n            seneca.add(this.pin(this.name, \"removeAll\", { conditions: \"*\" }),\r\n                async args => this.createFacade(args).remove(args.conditions));\r\n        }\r\n        if (this.emptyFacade.removeOne) {\r\n            seneca.add(this.pin(this.name, \"remove\", { conditions: \"*\" }),\r\n                async args => this.createFacade(args).removeOne(args.conditions));\r\n        }\r\n        if (this.emptyFacade.removeById) {\r\n            seneca.add(this.pin(this.name, \"remove\", { id: \"*\" }),\r\n                async args => this.createFacade(args).removeById(args.id));\r\n        }\r\n        if (this.emptyFacade.clean) {\r\n            seneca.add(this.pin(this.name, \"clean\"),\r\n                async args => this.createFacade(args).clean());\r\n        }\r\n    }\r\n}\r\n"]}