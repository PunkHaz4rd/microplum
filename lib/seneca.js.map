{"version":3,"sources":["lib/seneca.ts"],"names":[],"mappings":";;AAEA,IAAM,eAAe,GAAW;IAC5B,OAAO,EAAE,IAAI;IACb,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,YAAY;CACpD,CAAC;AAEF;IAII,gBAAmB,MAAW,EAAS,OAAiB,EAAS,GAAiB;QAA3C,wBAAA,EAAA,YAAiB;QAAS,oBAAA,EAAA,QAAiB;QAA/D,WAAM,GAAN,MAAM,CAAK;QAAS,YAAO,GAAP,OAAO,CAAU;QAAS,QAAG,GAAH,GAAG,CAAc;QAC9E,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB;;WAEG;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAE9D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,UAAS,IAAI,EAAE,IAAI;YAC/C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,IAAI,EAAE,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAExB;;oBAEY;IAChB,CAAC;IAEM,oBAAG,GAAV,UAAW,SAAmB,EAAE,GAAS;QACrC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;IACL,CAAC;IAEM,oBAAG,GAAV,UAAW,GAAQ,EAAE,EAAY;QAC7B,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAClD,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAG9D,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,0CAAwC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAG,CAAC,CAAC;IAC/E,CAAC;IAEO,uBAAM,GAAd,UAAe,GAAQ;QAAS,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/C,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAClD,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/D,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAA;QAC1C,CAAC;QAED,IAAI,OAAO,GAAU,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;aAChC,GAAG,CAAC,UAAA,GAAG,IAAI,OAAG,GAAG,SAAI,GAAG,CAAC,GAAG,CAAG,EAApB,CAAoB,CAAC;aAChC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEf,OAAO,CAAC,GAAG,CAAC,yCAAuC,OAAO,OAAI,CAAC,CAAC;QAChE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAEL,aAAC;AAAD,CArDA,AAqDC,IAAA;AArDY,wBAAM","file":"seneca.js","sourcesContent":["import { Config } from \"./model\";\n\nconst DEFAULT_OPTIONS: Config = {\n    version: \"v1\",\n    environment: process.env.NODE_ENV || \"production\"\n};\n\nexport class Seneca {\n\n    public util: any;\n\n    constructor(public seneca: any, public options: any = {}, public pin:string[] = []) {\n        this.util = seneca.util;\n        /**\n         * Default options\n         */\n        this.options = this.util.deepextend(DEFAULT_OPTIONS, options);\n\n        this.seneca.add(\"role:a,cmd:b\", function(args, done) {\n            console.log('run abc', JSON.stringify(args));\n            done(null, {msg:\"done\"});\n        });\n        this.pin.push(\"role:*\");\n\n        /*require( 'seneca' )()\n         .use( 'customPlugin' )\n         .listen()*/\n    }\n\n    public use(component: Function, pin?: any): void {\n        component.bind(this)(this.options);\n        if (pin) {\n            this.usePin(pin);\n        }\n    }\n\n    public add(pin: any, cb: Function): void {\n        pin.version = pin.version || this.options.version;\n        pin.environment = pin.environment || this.options.environment;\n\n\n        this.seneca.add(pin, cb);\n        console.log(`[Seneca] Registered service for PIN: ${JSON.stringify(pin)}`);\n    }\n\n    private usePin(pin: any): void {this.pin.push(pin);\n        pin.version = pin.version || this.options.version;\n        pin.environment = pin.environment || this.options.environment;\n        if (this.options.environment === \"dev\" && this.options.developer) {\n            pin.developer = this.options.developer\n        }\n\n        let realPin:string = Object.keys(pin)\n            .map(key => `${key}:${pin[key]}`)\n            .join(\",\");\n\n        console.log(`[Seneca] Register listen for PIN: \\\"${realPin}\\\"`);\n        this.pin.push(realPin);\n    }\n\n}\n"]}