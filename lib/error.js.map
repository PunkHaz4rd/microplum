{"version":3,"sources":["lib/error.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;IACI,mBAAmB,IAAY,EAAS,IAAY,EAAS,OAAe;QAAzD,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC5E,CAAC;IAAA,CAAC;IACN,gBAAC;AAAD,CAHA,AAGC,IAAA;AAHY,8BAAS;AAKtB;IAAqC,mCAAS;IAC1C,yBAAY,OAA2C;QAA3C,wBAAA,EAAA,mCAA2C;eACnD,kBAAM,GAAG,EAAE,sBAAc,CAAC,YAAY,EAAE,OAAO,CAAC;IACpD,CAAC;IACL,sBAAC;AAAD,CAJA,AAIC,CAJoC,SAAS,GAI7C;AAJY,0CAAe;AAM5B;IAAuC,qCAAS;IAC5C,2BAAY,OAA0C;QAA1C,wBAAA,EAAA,kCAA0C;eAClD,kBAAM,GAAG,EAAE,sBAAc,CAAC,SAAS,EAAE,OAAO,CAAC;IACjD,CAAC;IACL,wBAAC;AAAD,CAJA,AAIC,CAJsC,SAAS,GAI/C;AAJY,8CAAiB;AAM9B;IAAwC,sCAAS;IAC7C,4BAAY,OAAoC;QAApC,wBAAA,EAAA,4BAAoC;eAC5C,kBAAM,GAAG,EAAE,sBAAc,CAAC,SAAS,EAAE,OAAO,CAAC;IACjD,CAAC;IACL,yBAAC;AAAD,CAJA,AAIC,CAJuC,SAAS,GAIhD;AAJY,gDAAkB;AAM/B;IAA2C,yCAAS;IAChD,+BAAY,OAAuC;QAAvC,wBAAA,EAAA,+BAAuC;eAC/C,kBAAM,GAAG,EAAE,sBAAc,CAAC,YAAY,EAAE,OAAO,CAAC;IACpD,CAAC;IACL,4BAAC;AAAD,CAJA,AAIC,CAJ0C,SAAS,GAInD;AAJY,sDAAqB;AAMlC;IACI,oBAAmB,KAAa,EAAS,IAAY,EAAS,OAAe;QAA1D,UAAK,GAAL,KAAK,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAQ;IAC7E,CAAC;IACL,iBAAC;AAAD,CAHA,AAGC,IAAA;AAHY,gCAAU;AAKvB;IAAyC,uCAAS;IAC9C,6BAAmB,MAAc,EAAE,OAAsB;QAAtB,wBAAA,EAAA,cAAsB;QAAzD,YACI,kBAAM,GAAG,EAAE,sBAAc,CAAC,gBAAgB,EAAE,OAAO,CAAC,SACvD;QAFkB,YAAM,GAAN,MAAM,CAAQ;;IAEjC,CAAC;IACL,0BAAC;AAAD,CAJA,AAIC,CAJwC,SAAS,GAIjD;AAJY,kDAAmB;AAMhC,8DAA8D;AAC9D,iBAAmC,CAAW;IAC1C,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;QACrB,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QACf,MAAM,CAAC,GAAG,CAAC;IACf,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5B,CAAC;AAED,mBAAmB;AACN,QAAA,cAAc,GAAG,OAAO,CAAC;IAClC,cAAc;IACd,WAAW;IACX,WAAW;IACX,cAAc;IACd,kBAAkB;CACrB,CAAC,CAAC","file":"error.js","sourcesContent":["export class PlumError {\n    constructor(public code: number, public name: string, public message: string) {\n    };\n}\n\nexport class ServerPlumError extends PlumError {\n    constructor(message: string = \"Unexpected server error\") {\n        super(500, PlumErrorNames.server_error, message);\n    }\n}\n\nexport class NotFoundPlumError extends PlumError {\n    constructor(message: string = \"Entity not found error\") {\n        super(404, PlumErrorNames.not_found, message);\n    }\n}\n\nexport class ForbiddenPlumError extends PlumError {\n    constructor(message: string = \"Access forbidden\") {\n        super(404, PlumErrorNames.forbidden, message);\n    }\n}\n\nexport class UnauthorizedPlumError extends PlumError {\n    constructor(message: string = \"Unauthorized access\") {\n        super(404, PlumErrorNames.unauthorized, message);\n    }\n}\n\nexport class FieldError {\n    constructor(public field: string, public name: string, public message: string) {\n    }\n}\n\nexport class ValidationPlumError extends PlumError {\n    constructor(public fields: Object, message: string = null) {\n        super(404, PlumErrorNames.validation_error, message);\n    }\n}\n\n/** Utility function to create a K:V from a list of strings */\nfunction strEnum<T extends string>(o: Array<T>): {[K in T]: K} {\n    return o.reduce((res, key) => {\n        res[key] = key;\n        return res;\n    }, Object.create(null));\n}\n\n/** Create a K:V */\nexport const PlumErrorNames = strEnum([\n    \"server_error\",\n    \"not_found\",\n    \"forbidden\",\n    \"unauthorized\",\n    \"validation_error\",\n]);\n/** Create a Type */\nexport type PlumErrorNames = keyof typeof PlumErrorNames;"]}